environment:
  matrix:
  - julia_version: 1.0
  - julia_version: 1.1
  - julia_version: 1.2
  - julia_version: 1.3
  - julia_version: 1.4
  - julia_version: 1.5
  - julia_version: 1.6
  - julia_version: nightly

platform:
  - x86 # 32-bit
  - x64 # 64-bit

matrix:
  allow_failures:
  - julia_version: nightly

branches:
  only:
    - master
    - /release-.*/

notifications:
  - provider: Email
    on_build_success: false
    on_build_failure: false
    on_build_status_changed: false

install:
  - ps: iex ((new-object net.webclient).DownloadString("https://raw.githubusercontent.com/JuliaCI/Appveyor.jl/version-1/bin/install.ps1"))
  - C:\julia\bin\julia -e "using Pkg; if VERSION < v\"1.1\"; using LibGit2; user_regs = joinpath(DEPOT_PATH[1],\"registries\"); mkpath(user_regs); Base.shred!(LibGit2.CachedCredentials()) do creds; for (reg, url) in (\"General\" => \"https://github.com/JuliaRegistries/General.git\", \"EmmtRegistry\" => \"https://github.com/emmt/EmmtRegistry\"); path = joinpath(user_regs, reg); LibGit2.with(Pkg.GitTools.clone(; url, path; header = \"registry $reg from $(repr(url))\", credentials = creds)) do repo end; end; end; else; Pkg.Registry.add(\"General\"); Pkg.Registry.add(RegistrySpec(url=\"https://github.com/emmt/EmmtRegistry\")); end"

build_script:
  - echo "%JL_BUILD_SCRIPT%"
  - C:\julia\bin\julia -e "%JL_BUILD_SCRIPT%"

test_script:
  - echo "%JL_TEST_SCRIPT%"
  - C:\julia\bin\julia -e "%JL_TEST_SCRIPT%"

# # Uncomment to support code coverage upload. Should only be enabled for packages
# # which would have coverage gaps without running on Windows
# on_success:
#   - echo "%JL_CODECOV_SCRIPT%"
#   - C:\julia\bin\julia -e "%JL_CODECOV_SCRIPT%"
