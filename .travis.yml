# See example script at https://github.com/JuliaLang/Example.jl
# Also see Travis script https://github.com/travis-ci/travis-build/blob/master/lib/travis/build/script/julia.rb

language: julia

os:
  - linux
# - osx

julia:
  - 1.0
# - 1.1
# - 1.2
# - 1.3
# - 1.4
# - 1.5
  - 1.6
# - nightly

notifications:
  email: false

#codecov: true
#coveralls: true

jobs:
  allow_failures:
    - julia: nightly
  include:
    - stage: "Documentation"
      julia: 1.6
      os: linux
      script:
        - julia --project=docs/ -e 'using Pkg;
                                    Pkg.develop(PackageSpec(path=pwd()));
                                    Pkg.build("LinearInterpolators");
                                    Pkg.instantiate()'
        - julia --project=docs/ docs/make.jl
      after_success: skip

script:
  - if [[ -a .git/shallow ]]; then git fetch --unshallow; fi
  - julia ci_prep.jl
  - julia --project --check-bounds=yes --color=yes -e '
        pkgname = "LinearInterpolators";
        using Pkg;
        if VERSION < v"1.1.0";
            Pkg.build(pkgname);
        else;
            Pkg.build(pkgname; verbose = true);
        end;
        Pkg.test(coverage=true)'

# Code coverage (since a custom "script" is provided, this must be done
# explicitly, setting "codecov" and "coveralls" does not work).
after_success:
  - julia --project -e 'import Pkg;
                        Pkg.add("Coverage");
                        using Coverage;
                        Codecov.submit(process_folder())'
  - julia --project -e 'import Pkg;
                        Pkg.add("Coverage");
                        using Coverage;
                        Coveralls.submit(process_folder())'
